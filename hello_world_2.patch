--- hello_world_1.c	2015-10-08 18:01:08.320171026 +0530
+++ hello_world_2.c	2015-10-08 18:01:21.448236124 +0530
@@ -2,13 +2,20 @@
 #include <linux/kernel.h>
 #include <linux/init.h>
 #include <linux/debugfs.h>
+#include <linux/mutex.h>
+#include <asm/page_types.h>
+#include <linux/uaccess.h>
+#include <linux/semaphore.h>
 
 MODULE_LICENSE("GPL");
 MODULE_AUTHOR("Gadre Nayan A");
 MODULE_DESCRIPTION("Task 08 Module Challenge");
 
-struct dentry *dirret, *fileret, *jiffyret;
-int filevalue, jiffyvalue;
+unsigned char mybuf[PAGE_SIZE];
+
+struct rw_semaphore rw_sem;
+struct dentry *dirret, *fileret, *jiffyret, *fooret;
+int filevalue, jiffyvalue, foovalue;
 
 #define SIZE 13
 #define EUDYPTULA_ID "03b1da8ba102"
@@ -48,6 +55,27 @@
 	return sprintf(user, "Jiffies = %lu\n", jiffies);
 }
 
+ssize_t foo_read(struct file *fp, char __user *user, size_t size,
+loff_t *offs)
+{
+	ssize_t retval;
+	down_read(&rw_sem);
+	retval = simple_read_from_buffer(user, size, offs, mybuf, strlen(mybuf));
+	up_read(&rw_sem);
+	return retval;
+}
+
+ssize_t foo_write(struct file *fp, const char __user *user, size_t size,
+loff_t *offs)
+{	
+	if (size < 0 || size > PAGE_SIZE )
+		return -EFAULT;
+	down_write(&rw_sem);
+	copy_from_user(mybuf, user, size);
+	up_write(&rw_sem);
+	return size;
+}
+
 static const struct file_operations fops_debug = {
 	.read = debugfs_read,
 	.write = debugfs_write
@@ -57,12 +85,20 @@
 	.read = jiffy_read,
 };
 
+static const struct file_operations fops_foo_debug = {
+	.read = foo_read,
+	.write = foo_write
+};
+
 static int __init hello_init(void)
 {
 	pr_debug("Hello world!\n");
+	init_rwsem(&rw_sem);
 	dirret = debugfs_create_dir("eudyptula", NULL);
 	fileret = debugfs_create_file("id", 0666, dirret, &filevalue, &fops_debug);
 	jiffyret = debugfs_create_file("jiffies", 0444, dirret, &jiffyvalue, &fops_jiffy_debug);
+	fooret = debugfs_create_file("foo", 0644, dirret, &foovalue, &fops_foo_debug);
+
 	return 0;
 }
 
